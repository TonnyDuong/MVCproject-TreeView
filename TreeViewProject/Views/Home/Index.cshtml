@model  List<TreeViewProject.MenuSite>
<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.6.3/css/all.css" integrity="sha384-UHRtZLI+pbxtHCWp1t77Bi1L4ZtiqrqD80Kn4Z8NTSRyMA2Fd33n5dQ8lWUE00s/" crossorigin="anonymous">
<link rel="stylesheet" type="text/css" href="~/Content/TreeViewDesign.css"/>

@* Uses recursive behaviour to print the treeview*@
@helper CreateBranch(MenuSite item)
{
    var childList = Model.Where(a => a.ParentId == item.MenuId).ToList();

    if (childList.Count != 0)
    {
        <li>
            <span class="MyCaret">@item.MenuName</span>
            <ul class="nested">
                @foreach (var child in childList)
                {
                    @CreateBranch(child);
                }
            </ul>
        </li>
    }
    else
    {
        <li>
            @item.MenuName
        </li>
    }

}


<h2>My TreeView Project</h2>

<div style="border:solid 1px black; padding:10px; background-color:#FAFAFA">
    <div class="treeview">
        @if (Model != null && Model.Count() > 0)
        {
            <ul id="myUL">

                @foreach (var item in Model.Where(a => a.ParentId == 0))
                {
                    @CreateBranch(item);
                }

            </ul>
        }
    </div>
</div>

<br /><hr /><br />

<a href="@Url.Action("Create")" class="btn btn-success">
    <i class="fas fa-plus-square"></i>
    <span>
        Create
    </span>
</a>
<a href="@Url.Action("Delete")" class="btn btn-danger">
    <i class="fas fa-trash-alt"></i>
    <span>
        Delete
    </span>
</a>


<script>
    var toggler = document.getElementsByClassName("MyCaret");
    var i;

    for (i = 0; i < toggler.length; i++) {
        toggler[i].addEventListener("click", function () {
            this.parentElement.querySelector(".nested").classList.toggle("active");
            this.classList.toggle("MyCaret-down");
        });
    }
</script>